{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","key","label","createElement","className","textContent","name","htmlFor","id","placeholder","placeholderText","parentNode","append","string","correctPlaceholder","char","toUpperCase","indexOf","slice","toLowerCase"],"mappings":";AAAA,aA4BC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA1BD,IA0BC,EA1BKA,EAASC,SAASC,iBAAiB,SAEvBF,EAAAA,EAAAA,GAwBjB,IAxByB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAfG,IAAAA,EAAe,EAAA,MAClBC,EAAQH,SAASI,cAAc,SAErCD,EAAME,UAAY,CAAE,eACpBF,EAAMG,YAAcJ,EAAIK,KACxBJ,EAAMK,QAAUN,EAAIO,GACpBP,EAAIQ,YAAcC,EAAgBT,EAAIK,MACtCL,EAAIU,WAAWC,OAAOV,IAiBvB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAdD,SAASQ,EAAgBG,GACnBC,IAD2B,EAC3BA,EAAqB,GAEND,EAAAA,EAAAA,GAHY,IAGJ,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAhBE,IAAAA,EAAgB,EAAA,MACrBA,IAASA,EAAKC,eAA4C,IAA3BH,EAAOI,QAAQ,UAChDH,GAAsB,KAExBA,GAAsBC,GAPO,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAUxBD,OAAAA,EAAmB,GACvBE,cAAgBF,EAChBI,MAAM,GACNC","file":"main.3c76aaa5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\nfor (const key of inputs) {\n  const label = document.createElement('label');\n\n  label.className = [ 'field-label' ];\n  label.textContent = key.name;\n  label.htmlFor = key.id;\n  key.placeholder = placeholderText(key.name);\n  key.parentNode.append(label);\n}\n\nfunction placeholderText(string) {\n  let correctPlaceholder = '';\n\n  for (const char of string) {\n    if (char === char.toUpperCase() && string.indexOf('char') !== 0) {\n      correctPlaceholder += ' ';\n    }\n    correctPlaceholder += char;\n  }\n\n  return correctPlaceholder[0]\n    .toUpperCase() + correctPlaceholder\n    .slice(1)\n    .toLowerCase();\n}\n"]}